#!/bin/sh

SCRIPT=$(readlink -f $0)
SCRIPTPATH=$(dirname ${SCRIPT})
HTTP_DAEMON="HttpDaemon.py"
RSS_DAEMON="RSSDaemon"
QUEUE_DAEMON="QueueDaemon"


# Uncomment the section below if you would like to
# try and auto-detect a virtualenvironment
if [ "$VIRTUAL_ENV" == "" ] && [ -e "${SCRIPTPATH}/bin/activate" ]; then
  source "${SCRIPTPATH}/bin/activate"
fi

# Carry out specific functions when asked to by the system
case "$1" in
  compress)
    echo "Compressing database"
    sqlite3 ~/.flannelfox/flannelfox.db vacuum;
    ;;
  starthttp)
    if [ "$(pgrep -f -U $(whoami) $HTTP_DAEMON)" != "" ]; then
      echo "* $HTTP_DAEMON is Already running"
    else
      echo "* Starting $HTTP_DAEMON"
      screen -dmS HttpDaemon ${HTTP_DAEMON}
    fi
    ;;
  startrss)
    if [ "$(pgrep -f -U $(whoami) $RSS_DAEMON)" != "" ]; then
      echo "* $RSS_DAEMON is Already running"
    else
      echo "* Starting $RSS_DAEMON"
      ${RSS_DAEMON}
    fi
    ;;
  startqueue)
    if [ "$(pgrep -f -U $(whoami) $QUEUE_DAEMON)" != "" ]; then
      echo "* $QUEUE_DAEMON is Already running"
    else
      echo "* Starting $QUEUE_DAEMON"
      ${QUEUE_DAEMON}
    fi
    ;;
  start)
    $0 starthttp
    $0 startrss
    $0 startqueue
    ;;
  stop)
    $0 stophttp
    $0 stoprss
    $0 stopqueue
    ;;
  stophttp)
    echo "* Stopping $HTTP_DAEMON"
    while [ "$(pgrep -f -U $(whoami) $HTTP_DAEMON)" != "" ]; do
      echo "Waiting for $HTTP_DAEMON to terminate"
      sleep 5
      killall -u $(whoami) -9 -r $HTTP_DAEMON
    done
    ;;
  stoprss)
    echo "* Stopping $RSS_DAEMON"
    while [ "$(pgrep -f -U $(whoami) $RSS_DAEMON)" != "" ]; do
      echo "Waiting for $RSS_DAEMON to terminate"
      sleep 5
      killall -u $(whoami) -9 -r $RSS_DAEMON
    done
    ;;
  stopqueue)
    echo "* Stopping $QUEUE_DAEMON"
    while [ "$(pgrep -f -U $(whoami) $QUEUE_DAEMON)" != "" ]; do
      echo "Waiting for $QUEUE_DAEMON to terminate"
      sleep 5
      killall -u $(whoami) -9 -r $QUEUE_DAEMON
    done
    ;;
  restart)
    $0 stop
    $0 compress
    $0 start
    ;;
  upgrade-dev)
    $0 stop
    cd "$SCRIPTPATH"
    tar -czvf flannelfox-update-$(date +%Y%m%d%H%M%S).tar.gz ~/.flannelfox
    wget 'https://github.com/FlannelFox/FlannelFox/archive/development.zip' -O flannelfox.zip
    unzip -o flannelfox.zip
    cd ~/Flannel*
    python setup.py install
    cd "$SCRIPTPATH"
    $0 start
    ;;
  upgrade)
    $0 stop
    cd "$SCRIPTPATH"
    tar -czvf flannelfox-update-$(date +%Y%m%d%H%M%S).tar.gz ~/.flannelfox
    wget 'https://github.com/FlannelFox/FlannelFox/archive/master.zip' -O flannelfox.zip
    unzip -o flannelfox.zip
    cd ~/Flannel*
    python setup.py install
    cd "$SCRIPTPATH"
    $0 start
    ;;
  *)
    echo "Usage: flannelfox-init {start|stop|starthttp|startqueue|stophttp|stopqueue|startrss|stoprss|restart|upgrade}"
    exit 1
    ;;
esac

exit 0
